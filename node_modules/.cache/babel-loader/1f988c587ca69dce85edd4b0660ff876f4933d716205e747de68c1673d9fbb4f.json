{"ast":null,"code":"const initialState = {\n  films: []\n};\nconst movieReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"films/setFilms\":\n      return {\n        ...state,\n        films: [...action.payload]\n      };\n    default:\n      return state;\n  }\n};\nexport default movieReducer;","map":{"version":3,"names":["initialState","films","movieReducer","state","action","type","payload"],"sources":["C:/Users/Xiaom/wayUp/github/Newmovies/src/store/categorypage/reducer.ts"],"sourcesContent":["import { AnyAction } from \"redux\";\r\nimport { ISearch } from \"types/ISearch\";\r\n\r\nconst initialState = {\r\n  films: [],\r\n};\r\n\r\nexport interface IStore {\r\n  films: ISearch[];\r\n}\r\n\r\nconst movieReducer = (\r\n  state: IStore = initialState, \r\n  action: AnyAction\r\n  )  => {\r\n  switch (action.type) {\r\n    case \"films/setFilms\":\r\n      return { ...state, films: [...action.payload] };\r\n    default:\r\n\r\n      return state;\r\n  }\r\n};\r\nexport default movieReducer;\r\n"],"mappings":"AAGA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAMD,MAAMC,YAAY,GAAG,YAGb;EAAA,IAFNC,KAAa,uEAAGH,YAAY;EAAA,IAC5BI,MAAiB;EAEjB,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,gBAAgB;MACnB,OAAO;QAAE,GAAGF,KAAK;QAAEF,KAAK,EAAE,CAAC,GAAGG,MAAM,CAACE,OAAO;MAAE,CAAC;IACjD;MAEE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AACD,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}